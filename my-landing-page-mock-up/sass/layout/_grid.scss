.row {
    max-width: $grid-width;
    // background-color: #eee; used for grid-test
    margin: 0 auto;

    &:not(:last-child) {
        margin-bottom: $gutter-vertical;

        @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small;
        }
    }

    @include respond(tab-port) {
        max-width: 50rem;
        padding: 0 3rem;
    }

    @include clearfix;

    [class^="col-"] {
        // background-color: orangered; used for grid-test
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;

            // makes card columns vertical
            @include respond(tab-port) {
                margin-right: 0; // since we want these columns to take up the entire 100% width -- meaning we want 1 column per row on mobile devices -- we can now remove the gutter/margins that would be between each column
                margin-bottom: $gutter-vertical-small;
            }
        }

        @include respond(tab-port) {
            width: 100% !important; // !important overwrites the calculated column widths below in order for it to look the way you want it in 'tab-port' mobile devices
        }
    }

    // Calculation: (100% width - number of gutters * gutter width) / number of columns
    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    // Calculation: Width of a 2/3 column is 2 * (size of 1/3 column) + gutter width
    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + (2 * #{$gutter-horizontal}));
    }
}
